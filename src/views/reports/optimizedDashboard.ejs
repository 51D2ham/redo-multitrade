<%- include('../partials/header.ejs', { title: 'Business Dashboard' }) %>

<div class="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
    
    <!-- Header -->
    <div class="flex flex-col lg:flex-row lg:justify-between lg:items-center mb-8 gap-4">
      <div>
        <h1 class="text-3xl font-bold text-gray-900 mb-2 flex items-center gap-3">
          <div class="w-10 h-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl flex items-center justify-center">
            <i class="fas fa-chart-line text-white text-lg"></i>
          </div>
          Business Dashboard
        </h1>
        <p class="text-gray-600 flex items-center gap-2">
          <i class="fas fa-clock text-gray-400"></i>
          Real-time insights and analytics • <%= new Date().toLocaleDateString() %>
        </p>
      </div>
      
      <!-- Controls -->
      <div class="flex items-center gap-3">
        <form method="GET" class="flex gap-2">
          <select name="period" onchange="this.form.submit()" 
                  class="px-4 py-2 bg-white border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm">
            <% const currentPeriod = typeof period !== 'undefined' ? period : 'today'; %>
            <option value="today" <%= currentPeriod === 'today' ? 'selected' : '' %>>Today</option>
            <option value="yesterday" <%= currentPeriod === 'yesterday' ? 'selected' : '' %>>Yesterday</option>
            <option value="week" <%= currentPeriod === 'week' ? 'selected' : '' %>>This Week</option>
            <option value="month" <%= currentPeriod === 'month' ? 'selected' : '' %>>This Month</option>
            <option value="quarter" <%= currentPeriod === 'quarter' ? 'selected' : '' %>>This Quarter</option>
            <option value="year" <%= currentPeriod === 'year' ? 'selected' : '' %>>This Year</option>
            <option value="last7days" <%= currentPeriod === 'last7days' ? 'selected' : '' %>>Last 7 Days</option>
            <option value="last30days" <%= currentPeriod === 'last30days' ? 'selected' : '' %>>Last 30 Days</option>
            <option value="last90days" <%= currentPeriod === 'last90days' ? 'selected' : '' %>>Last 90 Days</option>
          </select>
        </form>
        
        <div class="flex gap-3">
          <a href="/admin/v1/order" 
             class="inline-flex items-center gap-2 px-4 py-2 bg-white border border-gray-200 rounded-xl hover:bg-gray-50 hover:border-gray-300 transition-all text-sm font-medium text-gray-700 shadow-sm">
            <i class="fas fa-shopping-cart text-gray-500"></i>Orders
          </a>
          <div class="relative">
            <button onclick="toggleExportMenu()" class="inline-flex items-center gap-2 px-6 py-2 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-xl hover:from-blue-700 hover:to-blue-800 transition-all text-sm font-medium shadow-lg hover:shadow-xl">
              <i class="fas fa-download"></i>Export <i class="fas fa-chevron-down text-xs ml-1"></i>
            </button>
            <div id="exportMenu" class="hidden absolute right-0 mt-3 w-52 bg-white rounded-xl shadow-xl border border-gray-200 z-20 overflow-hidden">
              <div class="p-2">
                <a href="/admin/dashboard/export/excel" class="flex items-center gap-3 px-4 py-3 text-sm text-gray-700 hover:bg-green-50 hover:text-green-700 rounded-lg transition-colors">
                  <i class="fas fa-file-excel text-green-600 text-lg"></i>
                  <div>
                    <div class="font-medium">Excel Report</div>
                    <div class="text-xs text-gray-500">Comprehensive data</div>
                  </div>
                </a>
                <a href="/admin/dashboard/export/csv" class="flex items-center gap-3 px-4 py-3 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-700 rounded-lg transition-colors">
                  <i class="fas fa-file-csv text-blue-600 text-lg"></i>
                  <div>
                    <div class="font-medium">CSV Report</div>
                    <div class="text-xs text-gray-500">Lightweight format</div>
                  </div>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Flash Messages -->
    <% if (success && success.length) { %>
      <div class="mb-6 p-4 rounded-lg bg-green-50 border border-green-200 text-green-800">
        <% success.forEach(msg => { %>
          <div class="flex items-center gap-2">
            <i class="fas fa-check-circle"></i>
            <%= msg %>
          </div>
        <% }) %>
      </div>
    <% } %>

    <% if (error && error.length) { %>
      <div class="mb-6 p-4 rounded-lg bg-red-50 border border-red-200 text-red-800">
        <% error.forEach(msg => { %>
          <div class="flex items-center gap-2">
            <i class="fas fa-exclamation-circle"></i>
            <%= msg %>
          </div>
        <% }) %>
      </div>
    <% } %>

    <!-- Key Metrics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
      <!-- Total Orders -->
      <div class="bg-white rounded-2xl border border-gray-200 p-6 hover:shadow-xl hover:-translate-y-1 transition-all duration-300 relative overflow-hidden">
        <div class="absolute top-0 right-0 w-20 h-20 bg-gradient-to-br from-blue-500/10 to-blue-600/10 rounded-full -mr-10 -mt-10"></div>
        <div class="relative">
          <div class="flex items-center gap-3 mb-4">
            <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center shadow-lg">
              <i class="fas fa-shopping-cart text-white text-lg"></i>
            </div>
            <div>
              <p class="text-sm font-semibold text-gray-600 uppercase tracking-wide">Total Orders</p>
              <p class="text-2xl font-bold text-gray-900">
                <%= (orderStats && orderStats.totalOrders) ? orderStats.totalOrders.toLocaleString() : '0' %>
              </p>
            </div>
          </div>
          <% if (orderStats && orderStats.fulfillmentRate) { %>
            <div class="flex items-center gap-2 bg-green-50 px-3 py-2 rounded-lg">
              <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
              <p class="text-sm font-medium text-green-700"><%= orderStats.fulfillmentRate %>% fulfilled</p>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Total Revenue -->
      <div class="bg-white rounded-2xl border border-gray-200 p-6 hover:shadow-xl hover:-translate-y-1 transition-all duration-300 relative overflow-hidden">
        <div class="absolute top-0 right-0 w-20 h-20 bg-gradient-to-br from-green-500/10 to-green-600/10 rounded-full -mr-10 -mt-10"></div>
        <div class="relative">
          <div class="flex items-center gap-3 mb-4">
            <div class="w-12 h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center shadow-lg">
              <i class="fas fa-rupee-sign text-white text-lg"></i>
            </div>
            <div>
              <p class="text-sm font-semibold text-gray-600 uppercase tracking-wide">Total Revenue</p>
              <p class="text-2xl font-bold text-gray-900">
                Rs <%= (orderStats && orderStats.totalRevenue) ? orderStats.totalRevenue.toLocaleString() : (revenueStats && revenueStats.totalRevenue) ? revenueStats.totalRevenue.toLocaleString() : '0' %>
              </p>
            </div>
          </div>
          <% 
            const growthRate = (revenueStats && revenueStats.growthRate !== undefined) ? revenueStats.growthRate : 0;
            const hasGrowthData = revenueStats && revenueStats.growthRate !== undefined;
          %>
          <% if (hasGrowthData) { %>
            <div class="flex items-center gap-2 bg-<%= growthRate >= 0 ? 'green' : 'red' %>-50 px-3 py-2 rounded-lg">
              <i class="fas fa-<%= growthRate >= 0 ? 'arrow-up' : 'arrow-down' %> text-<%= growthRate >= 0 ? 'green' : 'red' %>-600 text-sm"></i>
              <p class="text-sm font-medium text-<%= growthRate >= 0 ? 'green' : 'red' %>-700">
                <%= growthRate >= 0 ? '+' : '' %><%= growthRate %>% vs last period
              </p>
            </div>
          <% } else { %>
            <div class="flex items-center gap-2 bg-gray-50 px-3 py-2 rounded-lg">
              <i class="fas fa-info-circle text-gray-600 text-sm"></i>
              <p class="text-sm font-medium text-gray-700">No comparison data</p>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Active Products -->
      <div class="bg-white rounded-2xl border border-gray-200 p-6 hover:shadow-xl hover:-translate-y-1 transition-all duration-300 relative overflow-hidden">
        <div class="absolute top-0 right-0 w-20 h-20 bg-gradient-to-br from-purple-500/10 to-purple-600/10 rounded-full -mr-10 -mt-10"></div>
        <div class="relative">
          <div class="flex items-center gap-3 mb-4">
            <div class="w-12 h-12 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center shadow-lg">
              <i class="fas fa-box text-white text-lg"></i>
            </div>
            <div>
              <p class="text-sm font-semibold text-gray-600 uppercase tracking-wide">Active Products</p>
              <p class="text-2xl font-bold text-gray-900">
                <%= (productStats && productStats.activeProducts) ? productStats.activeProducts.toLocaleString() : '0' %>
              </p>
            </div>
          </div>
          <% if (inventoryAlerts && inventoryAlerts.lowStock && inventoryAlerts.lowStock.length > 0) { %>
            <div class="flex items-center gap-2 bg-orange-50 px-3 py-2 rounded-lg">
              <i class="fas fa-exclamation-triangle text-orange-600 text-sm"></i>
              <p class="text-sm font-medium text-orange-700"><%= inventoryAlerts.lowStock.length %> low stock alerts</p>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Stock Value -->
      <div class="bg-white rounded-2xl border border-gray-200 p-6 hover:shadow-xl hover:-translate-y-1 transition-all duration-300 relative overflow-hidden">
        <div class="absolute top-0 right-0 w-20 h-20 bg-gradient-to-br from-indigo-500/10 to-indigo-600/10 rounded-full -mr-10 -mt-10"></div>
        <div class="relative">
          <div class="flex items-center gap-3 mb-4">
            <div class="w-12 h-12 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center shadow-lg">
              <i class="fas fa-warehouse text-white text-lg"></i>
            </div>
            <div>
              <p class="text-sm font-semibold text-gray-600 uppercase tracking-wide">Stock Value</p>
              <p class="text-2xl font-bold text-gray-900">
                Rs <%= (productStats && productStats.stockValue) ? productStats.stockValue.toLocaleString() : '0' %>
              </p>
            </div>
          </div>
          <div class="flex items-center gap-2 bg-blue-50 px-3 py-2 rounded-lg">
            <i class="fas fa-chart-pie text-blue-600 text-sm"></i>
            <p class="text-sm font-medium text-blue-700">Total inventory value</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Charts Row -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
      <!-- Sales Trend Chart -->
      <div class="lg:col-span-2 bg-white rounded-2xl border border-gray-200 p-6 shadow-sm hover:shadow-lg transition-shadow">
        <div class="flex items-center justify-between mb-6">
          <div>
            <h3 class="text-xl font-bold text-gray-900 flex items-center gap-2">
              <i class="fas fa-chart-line text-blue-600"></i>
              Sales Trend
            </h3>
            <p class="text-sm text-gray-500 mt-1">
              <%= new Date(dateRange.startDate).toLocaleDateString() %> - <%= new Date(dateRange.endDate).toLocaleDateString() %>
            </p>
          </div>
          <div class="flex items-center gap-4">
            <div class="flex items-center gap-2 bg-blue-50 px-3 py-2 rounded-lg">
              <div class="w-3 h-3 bg-blue-500 rounded-full"></div>
              <span class="text-sm font-medium text-blue-700">Revenue</span>
            </div>
            <div class="flex items-center gap-2 bg-green-50 px-3 py-2 rounded-lg">
              <div class="w-3 h-3 bg-green-500 rounded-full"></div>
              <span class="text-sm font-medium text-green-700">Orders</span>
            </div>
          </div>
        </div>
        
        <% if (salesTrend && salesTrend.length > 0) { %>
          <div class="h-80">
            <canvas id="salesTrendChart"></canvas>
          </div>
        <% } else { %>
          <div class="h-80 flex items-center justify-center text-gray-400">
            <div class="text-center">
              <i class="fas fa-chart-line text-5xl mb-4"></i>
              <p class="text-lg font-medium">No sales data available</p>
              <p class="text-sm">Data will appear once orders are placed</p>
            </div>
          </div>
        <% } %>
      </div>

      <!-- Order Status Distribution -->
      <div class="bg-white rounded-2xl border border-gray-200 p-6 shadow-sm hover:shadow-lg transition-shadow">
        <div class="mb-6">
          <h3 class="text-xl font-bold text-gray-900 flex items-center gap-2">
            <i class="fas fa-chart-pie text-purple-600"></i>
            Order Status
          </h3>
          <p class="text-sm text-gray-500 mt-1">Current period breakdown</p>
        </div>
        
        <% if (orderStatusAnalytics && orderStatusAnalytics.raw && orderStatusAnalytics.raw.length > 0) { %>
          <!-- Mixed Order Alert -->
          <% 
            const mixedOrders = (recentOrders || []).filter(order => {
              if (!order.items || order.items.length <= 1) return false;
              const statuses = order.items.map(item => item.status || 'pending');
              return new Set(statuses).size > 1;
            });
          %>
          <% if (mixedOrders.length > 0) { %>
            <div class="mb-4 p-3 bg-orange-50 border border-orange-200 rounded-lg">
              <div class="flex items-center gap-2 text-orange-800">
                <i class="fas fa-exclamation-triangle text-orange-600"></i>
                <span class="text-sm font-medium"><%= mixedOrders.length %> Mixed Status Orders</span>
              </div>
              <p class="text-xs text-orange-600 mt-1">Orders with items in different statuses require attention</p>
            </div>
          <% } %>
          
          <div class="space-y-4">
            <% ['delivered', 'shipped', 'processing', 'pending', 'cancelled'].forEach(status => { %>
              <% const statusData = orderStatusAnalytics[status]; %>
              <% if (statusData && statusData.count > 0) { %>
                <div class="flex items-center justify-between">
                  <div class="flex items-center gap-3">
                    <div class="w-3 h-3 rounded-full <%= 
                      status === 'pending' ? 'bg-yellow-500' :
                      status === 'processing' ? 'bg-blue-500' :
                      status === 'shipped' ? 'bg-purple-500' :
                      status === 'delivered' ? 'bg-green-500' :
                      'bg-red-500'
                    %>"></div>
                    <span class="text-sm font-medium text-gray-700 capitalize"><%= status %></span>
                  </div>
                  <div class="text-right">
                    <div class="text-sm font-semibold text-gray-900">
                      <%= statusData.count %>
                    </div>
                    <div class="text-xs text-gray-500">
                      Rs <%= statusData.revenue.toLocaleString() %>
                    </div>
                  </div>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-2">
                  <div class="h-2 rounded-full <%= 
                    status === 'pending' ? 'bg-yellow-500' :
                    status === 'processing' ? 'bg-blue-500' :
                    status === 'shipped' ? 'bg-purple-500' :
                    status === 'delivered' ? 'bg-green-500' :
                    'bg-red-500'
                  %>" style="width: <%= Math.min(100, (statusData.count / (orderStats?.totalOrders || 1)) * 100) %>%"></div>
                </div>
              <% } %>
            <% }) %>
          </div>
        <% } else { %>
          <div class="h-64 flex items-center justify-center text-gray-400">
            <div class="text-center">
              <i class="fas fa-chart-pie text-4xl mb-3"></i>
              <p class="font-medium">No order data</p>
              <p class="text-xs">Orders will appear here</p>
            </div>
          </div>
        <% } %>
      </div>
    </div>

    <!-- Top Performance Section -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
      <!-- Top Products -->
      <div class="bg-white rounded-2xl border border-gray-200 p-6 shadow-sm hover:shadow-lg transition-all duration-300">
        <div class="flex items-center justify-between mb-4">
          <div>
            <h3 class="text-lg font-bold text-gray-900 flex items-center gap-2">
              <i class="fas fa-trophy text-yellow-500"></i>
              Top Products
            </h3>
            <p class="text-xs text-gray-500 mt-1">Best performing items</p>
          </div>
          <a href="/admin/v1/products" class="text-xs text-blue-600 hover:text-blue-700 font-medium">View All</a>
        </div>
        
        <div class="space-y-2">
          <% if (topProducts && topProducts.length > 0) { %>
            <% topProducts.slice(0, 3).forEach((product, index) => { %>
              <div class="flex items-center gap-3 p-2 bg-gray-50 rounded-lg">
                <div class="w-6 h-6 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center text-white text-xs font-bold">
                  <%= index + 1 %>
                </div>
                <div class="flex-1 min-w-0">
                  <p class="font-medium text-gray-900 text-xs truncate">
                    <%= product.productTitle || 'Unknown Product' %>
                  </p>
                  <div class="flex items-center gap-3 mt-1">
                    <span class="text-xs text-gray-500"><%= product.totalSold || 0 %> sold</span>
                    <span class="text-xs font-medium text-green-600">Rs <%= (product.totalRevenue || 0).toLocaleString() %></span>
                  </div>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-8 text-gray-400">
              <i class="fas fa-chart-bar text-2xl mb-2"></i>
              <p class="text-xs">No sales data</p>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Top Categories -->
      <div class="bg-white rounded-2xl border border-gray-200 p-6 shadow-sm hover:shadow-lg transition-all duration-300">
        <div class="flex items-center justify-between mb-4">
          <div>
            <h3 class="text-lg font-bold text-gray-900 flex items-center gap-2">
              <i class="fas fa-tags text-purple-500"></i>
              Top Categories
            </h3>
            <p class="text-xs text-gray-500 mt-1">Best performing categories</p>
          </div>
          <a href="/admin/v1/parameters/categories" class="text-xs text-blue-600 hover:text-blue-700 font-medium">View All</a>
        </div>
        
        <div class="space-y-2">
          <% if (topCategories && topCategories.length > 0) { %>
            <% topCategories.slice(0, 3).forEach((category, index) => { %>
              <div class="flex items-center gap-3 p-2 bg-gray-50 rounded-lg">
                <div class="w-6 h-6 bg-gradient-to-br from-purple-500 to-purple-600 rounded-lg flex items-center justify-center text-white text-xs font-bold">
                  <%= index + 1 %>
                </div>
                <div class="flex-1 min-w-0">
                  <p class="font-medium text-gray-900 text-xs truncate"><%= category.categoryName || 'Unknown' %></p>
                  <div class="flex items-center gap-3 mt-1">
                    <span class="text-xs text-gray-500"><%= category.totalSold || 0 %> items</span>
                    <span class="text-xs font-medium text-green-600">Rs <%= (category.totalRevenue || 0).toLocaleString() %></span>
                  </div>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-8 text-gray-400">
              <i class="fas fa-tags text-2xl mb-2"></i>
              <p class="text-xs">No category data</p>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Top Brands -->
      <div class="bg-white rounded-2xl border border-gray-200 p-6 shadow-sm hover:shadow-lg transition-all duration-300">
        <div class="flex items-center justify-between mb-4">
          <div>
            <h3 class="text-lg font-bold text-gray-900 flex items-center gap-2">
              <i class="fas fa-award text-orange-500"></i>
              Top Brands
            </h3>
            <p class="text-xs text-gray-500 mt-1">Best performing brands</p>
          </div>
          <a href="/admin/v1/parameters/brands" class="text-xs text-blue-600 hover:text-blue-700 font-medium">View All</a>
        </div>
        
        <div class="space-y-2">
          <% if (topBrands && topBrands.length > 0) { %>
            <% topBrands.slice(0, 3).forEach((brand, index) => { %>
              <div class="flex items-center gap-3 p-2 bg-gray-50 rounded-lg">
                <div class="w-6 h-6 bg-gradient-to-br from-orange-500 to-orange-600 rounded-lg flex items-center justify-center text-white text-xs font-bold">
                  <%= index + 1 %>
                </div>
                <div class="flex-1 min-w-0">
                  <p class="font-medium text-gray-900 text-xs truncate"><%= brand.brandName || 'Unknown Brand' %></p>
                  <div class="flex items-center gap-3 mt-1">
                    <span class="text-xs text-gray-500"><%= brand.totalSold || 0 %> items</span>
                    <span class="text-xs font-medium text-green-600">Rs <%= (brand.totalRevenue || 0).toLocaleString() %></span>
                  </div>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-8 text-gray-400">
              <i class="fas fa-award text-2xl mb-2"></i>
              <p class="text-xs">No brand data</p>
            </div>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Secondary Analytics -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
      <!-- Top SubCategories -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
        <div class="flex items-center justify-between mb-6">
          <h3 class="text-lg font-semibold text-gray-800">📋 Top SubCategories</h3>
          <a href="/admin/v1/parameters/subcategories" class="text-sm text-blue-600 hover:text-blue-800">View All</a>
        </div>
        
        <div class="space-y-4">
          <% if (topSubCategories && topSubCategories.length > 0) { %>
            <% topSubCategories.slice(0, 5).forEach((subcat, index) => { %>
              <div class="flex items-center justify-between p-3 bg-gray-50 rounded-xl">
                <div class="flex items-center gap-3">
                  <div class="w-8 h-8 bg-indigo-100 rounded-full flex items-center justify-center">
                    <span class="text-sm font-bold text-indigo-600"><%= index + 1 %></span>
                  </div>
                  <div>
                    <p class="font-medium text-gray-900 text-sm"><%= subcat.subCategoryName || 'Unknown' %></p>
                    <p class="text-xs text-gray-500"><%= subcat.totalSold || 0 %> items</p>
                  </div>
                </div>
                <div class="text-right">
                  <p class="text-sm font-semibold text-gray-900">
                    Rs <%= (subcat.totalRevenue || 0).toLocaleString() %>
                  </p>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-8 text-gray-500">
              <i class="fas fa-list text-3xl mb-2"></i>
              <p>No subcategory sales data</p>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Top Types -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
        <div class="flex items-center justify-between mb-6">
          <h3 class="text-lg font-semibold text-gray-800">🔖 Top Types</h3>
          <a href="/admin/v1/parameters/types" class="text-sm text-blue-600 hover:text-blue-800">View All</a>
        </div>
        
        <div class="space-y-4">
          <% if (topTypes && topTypes.length > 0) { %>
            <% topTypes.slice(0, 5).forEach((type, index) => { %>
              <div class="flex items-center justify-between p-3 bg-gray-50 rounded-xl">
                <div class="flex items-center gap-3">
                  <div class="w-8 h-8 bg-pink-100 rounded-full flex items-center justify-center">
                    <span class="text-sm font-bold text-pink-600"><%= index + 1 %></span>
                  </div>
                  <div>
                    <p class="font-medium text-gray-900 text-sm"><%= type.typeName || 'Unknown' %></p>
                    <p class="text-xs text-gray-500"><%= type.totalSold || 0 %> items</p>
                  </div>
                </div>
                <div class="text-right">
                  <p class="text-sm font-semibold text-gray-900">
                    Rs <%= (type.totalRevenue || 0).toLocaleString() %>
                  </p>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-8 text-gray-500">
              <i class="fas fa-tag text-3xl mb-2"></i>
              <p>No type sales data</p>
            </div>
          <% } %>
        </div>
      </div>
    </div>

    <!-- SubCategories and Types -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
      <!-- Recent Movements -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
        <div class="flex items-center justify-between mb-6">
          <h3 class="text-lg font-semibold text-gray-800">📈 Recent Movements</h3>
          <a href="/admin/inventory/movements" class="text-sm text-blue-600 hover:text-blue-800">View All</a>
        </div>
        
        <div class="space-y-4">
          <% if (recentInventoryMovements && recentInventoryMovements.length > 0) { %>
            <% recentInventoryMovements.slice(0, 5).forEach((movement, index) => { %>
              <div class="flex items-center justify-between p-3 bg-gray-50 rounded-xl">
                <div class="flex items-center gap-3">
                  <div class="w-8 h-8 bg-<%= movement.type === 'sale' ? 'red' : movement.type === 'restock' ? 'green' : 'blue' %>-100 rounded-full flex items-center justify-center">
                    <span class="text-sm font-bold text-<%= movement.type === 'sale' ? 'red' : movement.type === 'restock' ? 'green' : 'blue' %>-600"><%= index + 1 %></span>
                  </div>
                  <div>
                    <p class="font-medium text-gray-900 text-sm"><%= (movement.productTitle || movement.product?.title || 'Unknown Product').substring(0, 20) %><%= (movement.productTitle || movement.product?.title || 'Unknown Product').length > 20 ? '...' : '' %></p>
                    <p class="text-xs text-gray-500"><%= movement.type.charAt(0).toUpperCase() + movement.type.slice(1) %> • <%= movement.variantSku || 'N/A' %></p>
                  </div>
                </div>
                <div class="text-right">
                  <p class="text-sm font-semibold text-gray-900">
                    <%= movement.type === 'sale' ? '-' : '+' %><%= movement.quantity || 0 %> units
                  </p>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-8 text-gray-500">
              <i class="fas fa-history text-3xl mb-2"></i>
              <p>No recent movements</p>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Inventory Alerts -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
        <div class="flex items-center justify-between mb-6">
          <h3 class="text-lg font-semibold text-gray-800">⚠️ Inventory Alerts</h3>
          <a href="/admin/inventory/low-stock" class="text-sm text-blue-600 hover:text-blue-800">View All</a>
        </div>
        
        <div class="space-y-4">
          <% 
            const inventoryAlertsList = [];
            if (inventoryAlerts && inventoryAlerts.outOfStock) {
              inventoryAlerts.outOfStock.forEach(product => {
                if (product.variants && product.variants.length > 0) {
                  product.variants.forEach(variant => {
                    const stock = variant.stock || 0;
                    if (stock === 0) {
                      inventoryAlertsList.push({
                        title: product.title,
                        stock: stock,
                        status: 'critical',
                        sku: variant.sku
                      });
                    }
                  });
                } else {
                  inventoryAlertsList.push({
                    title: product.title,
                    stock: 0,
                    status: 'critical',
                    sku: 'N/A'
                  });
                }
              });
            }
            if (inventoryAlerts && inventoryAlerts.lowStock) {
              inventoryAlerts.lowStock.forEach(product => {
                if (product.variants && product.variants.length > 0) {
                  product.variants.forEach(variant => {
                    const stock = variant.stock || 0;
                    const threshold = variant.lowStockAlert || 5;
                    if (stock > 0 && stock <= threshold) {
                      inventoryAlertsList.push({
                        title: product.title,
                        stock: stock,
                        status: 'low',
                        sku: variant.sku,
                        threshold: threshold
                      });
                    }
                  });
                } else {
                  const stock = product.stock || product.currentStock || 0;
                  if (stock > 0 && stock <= 5) {
                    inventoryAlertsList.push({
                      title: product.title,
                      stock: stock,
                      status: 'low',
                      sku: 'N/A',
                      threshold: 5
                    });
                  }
                }
              });
            }
            inventoryAlertsList.sort((a, b) => {
              if (a.status === 'critical' && b.status !== 'critical') return -1;
              if (b.status === 'critical' && a.status !== 'critical') return 1;
              return a.stock - b.stock;
            });
          %>
          
          <% if (inventoryAlertsList.length > 0) { %>
            <% inventoryAlertsList.slice(0, 5).forEach((alert, index) => { %>
              <div class="flex items-center justify-between p-3 bg-gray-50 rounded-xl">
                <div class="flex items-center gap-3">
                  <div class="w-8 h-8 bg-<%= alert.status === 'critical' ? 'red' : 'orange' %>-100 rounded-full flex items-center justify-center">
                    <span class="text-sm font-bold text-<%= alert.status === 'critical' ? 'red' : 'orange' %>-600"><%= index + 1 %></span>
                  </div>
                  <div>
                    <p class="font-medium text-gray-900 text-sm"><%= (alert.title || 'Unknown Product').substring(0, 20) %><%= (alert.title || 'Unknown Product').length > 20 ? '...' : '' %></p>
                    <p class="text-xs text-gray-500"><%= alert.status === 'critical' ? 'Out of Stock' : 'Low Stock' %> • <%= alert.sku || 'N/A' %></p>
                  </div>
                </div>
                <div class="text-right">
                  <p class="text-sm font-semibold text-<%= alert.status === 'critical' ? 'red' : 'orange' %>-700">
                    <%= alert.stock %> units
                  </p>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-8 text-gray-500">
              <i class="fas fa-check-circle text-3xl mb-2 text-green-500"></i>
              <p class="text-green-600">All products well stocked!</p>
            </div>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Activity & Alerts Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <!-- Recent Orders -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
        <div class="flex items-center justify-between mb-6">
          <h3 class="text-lg font-semibold text-gray-800">🛒 Recent Orders</h3>
          <a href="/admin/v1/order" class="text-sm text-blue-600 hover:text-blue-800">View All</a>
        </div>
        
        <div class="space-y-4">
          <% if (recentOrders && recentOrders.length > 0) { %>
            <% recentOrders.slice(0, 5).forEach((order, index) => { %>
              <div class="flex items-center justify-between p-3 bg-gray-50 rounded-xl">
                <div class="flex items-center gap-3">
                  <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                    <span class="text-sm font-bold text-green-600"><%= index + 1 %></span>
                  </div>
                  <div>
                    <p class="font-medium text-gray-900 text-sm">#<%= order._id.toString().slice(-6).toUpperCase() %></p>
                    <p class="text-xs text-gray-500"><%= order.user?.fullname || 'Guest' %> • <%= order.items?.length || 0 %> items</p>
                  </div>
                </div>
                <div class="text-right">
                  <p class="text-sm font-semibold text-gray-900">
                    Rs <%= (order.totalPrice || 0).toLocaleString() %>
                  </p>
                  <span class="inline-flex px-2 py-1 rounded-full text-xs font-medium <%= 
                    order.status === 'pending' ? 'bg-yellow-100 text-yellow-700' :
                    order.status === 'processing' ? 'bg-blue-100 text-blue-700' :
                    order.status === 'shipped' ? 'bg-purple-100 text-purple-700' :
                    order.status === 'delivered' ? 'bg-green-100 text-green-700' :
                    'bg-red-100 text-red-700'
                  %>">
                    <%= order.status %>
                  </span>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-8 text-gray-500">
              <i class="fas fa-shopping-cart text-3xl mb-2"></i>
              <p>No recent orders</p>
            </div>
          <% } %>
        </div>
      </div>


    </div>
  </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
<script>
  <% if (salesTrend && salesTrend.length > 0) { %>
  // Sales Trend Chart
  const salesTrendCtx = document.getElementById('salesTrendChart').getContext('2d');
  const salesTrendData = <%- JSON.stringify(salesTrend || []) %>;
  
  new Chart(salesTrendCtx, {
    type: 'line',
    data: {
      labels: salesTrendData.map(item => {
        const date = new Date(item._id);
        return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });
      }),
      datasets: [{
        label: 'Revenue',
        data: salesTrendData.map(item => item.revenue || 0),
        borderColor: '#3B82F6',
        backgroundColor: function(context) {
          const chart = context.chart;
          const {ctx, chartArea} = chart;
          if (!chartArea) return null;
          const gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);
          gradient.addColorStop(0, 'rgba(59, 130, 246, 0.05)');
          gradient.addColorStop(1, 'rgba(59, 130, 246, 0.3)');
          return gradient;
        },
        borderWidth: 4,
        tension: 0.4,
        fill: true,
        pointBackgroundColor: '#3B82F6',
        pointBorderColor: '#ffffff',
        pointBorderWidth: 3,
        pointRadius: 6,
        pointHoverRadius: 8,
        pointHoverBorderWidth: 4
      }, {
        label: 'Orders',
        data: salesTrendData.map(item => item.orders || 0),
        borderColor: '#10B981',
        backgroundColor: 'transparent',
        borderWidth: 4,
        tension: 0.4,
        fill: false,
        pointBackgroundColor: '#10B981',
        pointBorderColor: '#ffffff',
        pointBorderWidth: 3,
        pointRadius: 6,
        pointHoverRadius: 8,
        pointHoverBorderWidth: 4,
        yAxisID: 'y1'
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      interaction: {
        intersect: false,
        mode: 'index'
      },
      plugins: {
        legend: {
          display: false
        },
        tooltip: {
          backgroundColor: 'rgba(17, 24, 39, 0.95)',
          titleColor: '#ffffff',
          bodyColor: '#ffffff',
          borderColor: 'rgba(59, 130, 246, 0.3)',
          borderWidth: 2,
          cornerRadius: 12,
          displayColors: true,
          padding: 12,
          titleFont: {
            size: 14,
            weight: 'bold'
          },
          bodyFont: {
            size: 13
          },
          callbacks: {
            title: function(context) {
              return context[0].label;
            },
            label: function(context) {
              if (context.datasetIndex === 0) {
                const value = context.parsed.y;
                let formattedValue;
                if (value >= 10000000) {
                  formattedValue = 'Rs ' + (value / 10000000).toFixed(2) + ' Cr';
                } else if (value >= 100000) {
                  formattedValue = 'Rs ' + (value / 100000).toFixed(2) + ' L';
                } else if (value >= 1000) {
                  formattedValue = 'Rs ' + (value / 1000).toFixed(0) + 'K';
                } else {
                  formattedValue = 'Rs ' + value.toLocaleString('en-IN');
                }
                return '💰 Revenue: ' + formattedValue;
              } else {
                return '📦 Orders: ' + context.parsed.y;
              }
            }
          }
        }
      },
      scales: {
        x: {
          grid: {
            display: false
          },
          border: {
            display: false
          },
          ticks: {
            color: '#6B7280',
            font: {
              size: 12,
              weight: '500'
            },
            maxTicksLimit: 8,
            padding: 8
          }
        },
        y: {
          type: 'linear',
          display: true,
          position: 'left',
          grid: {
            color: 'rgba(107, 114, 128, 0.08)',
            drawBorder: false,
            lineWidth: 1
          },
          border: {
            display: false
          },
          ticks: {
            color: '#6B7280',
            font: {
              size: 12,
              weight: '500'
            },
            padding: 8,
            callback: function(value) {
              if (value >= 10000000) {
                return 'Rs ' + (value / 10000000).toFixed(1) + 'Cr';
              } else if (value >= 100000) {
                return 'Rs ' + (value / 100000).toFixed(1) + 'L';
              } else if (value >= 1000) {
                return 'Rs ' + (value / 1000).toFixed(0) + 'K';
              }
              return 'Rs ' + value.toLocaleString('en-IN');
            }
          }
        },
        y1: {
          type: 'linear',
          display: true,
          position: 'right',
          grid: {
            drawOnChartArea: false,
            display: false
          },
          border: {
            display: false
          },
          ticks: {
            color: '#6B7280',
            font: {
              size: 12,
              weight: '500'
            },
            padding: 8,
            stepSize: 1,
            callback: function(value) {
              return Math.floor(value) === value ? value : '';
            }
          }
        }
      }
    }
  });
  <% } %>
  
  // Export menu toggle
  function toggleExportMenu() {
    const menu = document.getElementById('exportMenu');
    menu.classList.toggle('hidden');
  }
  
  // Close menu when clicking outside
  document.addEventListener('click', function(event) {
    const menu = document.getElementById('exportMenu');
    const button = event.target.closest('button');
    if (!button || !button.onclick) {
      menu.classList.add('hidden');
    }
  });
</script>

<%- include('../partials/footer.ejs') %>