<%- include('../partials/header.ejs', { title: 'Products Management' }) %>

<div class="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-6">
    
    <!-- Header -->
    <div class="flex flex-col lg:flex-row lg:justify-between lg:items-center mb-6 sm:mb-8 gap-4">
      <div class="text-center lg:text-left">
        <h1 class="text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 mb-2">Products Management</h1>
        <p class="text-gray-600 text-sm sm:text-base">Manage your product catalog efficiently</p>
      </div>
      <div class="flex flex-col sm:flex-row items-center gap-3 w-full lg:w-auto">
        <a href="/admin/v1/staff/dashboard" class="w-full sm:w-auto px-4 py-2.5 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors text-center font-medium">
          Dashboard
        </a>
        <a href="/admin/v1/products/featured/ranking" class="w-full sm:w-auto px-4 py-2.5 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 transition-colors text-center font-medium flex items-center gap-2">
          <i class="fa fa-star"></i> Featured Ranking
        </a>
        <a href="/admin/v1/products/new" class="w-full sm:w-auto px-4 py-2.5 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-center font-medium flex items-center gap-2">
          <i class="fa fa-plus"></i> Add Product
        </a>
      </div>
    </div>

    <!-- Flash Messages -->
    <% if (success && success.length) { %>
      <div class="mb-6 p-4 rounded-lg bg-green-50 border border-green-200 text-green-800">
        <% success.forEach(msg => { %>
          <div class="flex items-center gap-2">
            <i class="fas fa-check-circle"></i>
            <%= msg %>
          </div>
        <% }) %>
      </div>
    <% } %>

    <% if (error && error.length) { %>
      <div class="mb-6 p-4 rounded-lg bg-red-50 border border-red-200 text-red-800">
        <% error.forEach(msg => { %>
          <div class="flex items-center gap-2">
            <i class="fas fa-exclamation-circle"></i>
            <%= msg %>
          </div>
        <% }) %>
      </div>
    <% } %>

    <!-- Filters -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 mb-8">
      <div class="px-6 py-4 border-b border-gray-100">
        <h3 class="text-lg font-semibold text-gray-900">Filter & Search Products</h3>
        <p class="text-sm text-gray-500 mt-1">Use filters to find specific products quickly</p>
      </div>
      <div class="p-6">
        <form method="GET" id="searchForm" class="space-y-6">
          <!-- Search Bar -->
          <div class="flex flex-col sm:flex-row gap-4">
            <div class="flex-1">
              <label class="block text-sm font-medium text-gray-700 mb-2">Search Products</label>
              <div class="relative">
                <input name="search" id="searchInput" value="<%= filters.search || '' %>" 
                       class="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" 
                       placeholder="Product title, SKU, description..." 
                       autocomplete="off" />
                <button type="button" id="clearSearch" class="absolute right-3 top-2.5 text-gray-400 hover:text-gray-600" style="display: none;">
                  Ã—
                </button>
              </div>
            </div>
            <div class="flex items-end gap-3">
              <button type="submit" class="px-6 py-2.5 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium">
                Search
              </button>
              <a href="/admin/v1/products" class="px-4 py-2.5 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors" title="Clear All Filters">
                Clear
              </a>
            </div>
          </div>
          
          <!-- Filter Grid -->
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
              <select name="status" class="w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white transition-colors">
                <option value="">All Status</option>
                <option value="draft" <%= filters.status === 'draft' ? 'selected' : '' %>>Draft</option>
                <option value="active" <%= filters.status === 'active' ? 'selected' : '' %>>Active</option>
                <option value="inactive" <%= filters.status === 'inactive' ? 'selected' : '' %>>Inactive</option>
              </select>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Category</label>
              <select name="category" class="w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white transition-colors">
                <option value="">All Categories</option>
                <% if (categories) { categories.forEach(cat => { %>
                  <option value="<%= cat._id %>" <%= filters.category === cat._id.toString() ? 'selected' : '' %>>
                    <%= cat.name %>
                  </option>
                <% }); } %>
              </select>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Brand</label>
              <select name="brand" class="w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white transition-colors">
                <option value="">All Brands</option>
                <% if (brands) { brands.forEach(brand => { %>
                  <option value="<%= brand._id %>" <%= filters.brand === brand._id.toString() ? 'selected' : '' %>>
                    <%= brand.name %>
                  </option>
                <% }); } %>
              </select>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Stock Status</label>
              <select name="stock" class="w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white transition-colors">
                <option value="">All Stock</option>
                <option value="instock" <%= filters.stock === 'instock' ? 'selected' : '' %>>In Stock</option>
                <option value="lowstock" <%= filters.stock === 'lowstock' ? 'selected' : '' %>>Low Stock</option>
                <option value="outofstock" <%= filters.stock === 'outofstock' ? 'selected' : '' %>>Out of Stock</option>
              </select>
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- Products Display -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
      <div class="px-6 py-4 border-b border-gray-100">
        <h3 class="text-lg font-semibold text-gray-900">Products Catalog</h3>
        <p class="text-sm text-gray-500 mt-1">Manage your product inventory</p>
      </div>
      
      <% if (products.length === 0) { %>
        <div class="p-12 text-center">
          <div class="text-6xl text-gray-300 mb-4">ðŸ“¦</div>
          <h2 class="text-xl font-semibold text-gray-800 mb-2">No Products Found</h2>
          <p class="text-gray-500 mb-4">Try adjusting your filters or create your first product</p>
          <a href="/admin/v1/products/new" class="inline-flex items-center px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors">
            Create First Product
          </a>
        </div>
      <% } else { %>
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead class="bg-gray-50 border-b">
              <tr>
                <th class="px-4 py-4 text-center text-sm font-semibold text-gray-900 w-16">#</th>
                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-900">Product Details</th>
                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-900">Category & Brand</th>
                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-900">Price & Variants</th>
                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-900">Stock Status</th>
                <th class="px-6 py-4 text-left text-sm font-semibold text-gray-900">Status</th>
                <th class="px-6 py-4 text-center text-sm font-semibold text-gray-900">Actions</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-200">
              <% products.forEach((product, idx) => { %>
                <% 
                  // Fix numbering calculation - looks like 20 items per page
                  let currentPage = 1;
                  let itemsPerPage = 20; // Updated to match actual pagination
                  
                  if (typeof pagination !== 'undefined' && pagination) {
                    currentPage = pagination.current || pagination.page || 1;
                    itemsPerPage = pagination.limit || pagination.perPage || pagination.size || 20;
                  }
                  
                  const productNumber = (currentPage - 1) * itemsPerPage + idx + 1;
                  
                  // Calculate variant count
                  const variantCount = product.variants ? product.variants.length : 0;
                %>
                <tr class="hover:bg-gray-50 transition-colors">
                  <!-- Row Number -->
                  <td class="px-4 py-4 text-center">
                    <span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-blue-100 text-blue-800 text-sm font-semibold">
                      <%= productNumber %>
                    </span>
                  </td>
                  
                  <td class="px-6 py-4">
                    <div class="flex items-center gap-3">
                      <% if (product.images && product.images.length > 0) { %>
                        <div class="w-16 h-16 rounded-xl overflow-hidden border border-gray-200 bg-gray-50 flex-shrink-0 shadow-sm">
                          <img src="/uploads/products/<%= product.images[0] %>" alt="<%= product.title %>" class="w-full h-full object-cover">
                        </div>
                      <% } else { %>
                        <div class="w-16 h-16 rounded-xl border border-gray-200 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center flex-shrink-0 shadow-sm">
                          <div class="w-8 h-8 bg-gray-300 rounded-lg"></div>
                        </div>
                      <% } %>
                      <div class="min-w-0 flex-1">
                        <div class="font-semibold text-gray-900 mb-1 leading-tight line-clamp-2"><%= product.title %></div>
                        <div class="text-sm text-gray-500 font-mono bg-gray-50 px-2 py-1 rounded inline-block">
                          SKU: <%= product.variants && product.variants[0] ? product.variants[0].sku : 'N/A' %>
                        </div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4">
                    <div class="flex flex-col gap-1">
                      <div class="font-medium text-gray-900"><%= product.category?.name || 'Uncategorized' %></div>
                      <% if (product.brand?.name) { %>
                        <div class="text-sm text-blue-600 font-medium">
                          <%= product.brand.name %>
                        </div>
                      <% } %>
                    </div>
                  </td>
                  <td class="px-6 py-4">
                    <div class="flex flex-col gap-3">
                      <!-- Main Price -->
                      <div class="flex items-baseline gap-2">
                        <span class="text-lg font-semibold text-gray-900">Rs <%= (product.price || 0).toLocaleString() %></span>
                        <% if (product.comparePrice && product.comparePrice > product.price) { %>
                          <span class="text-sm text-gray-400 line-through">Rs <%= product.comparePrice.toLocaleString() %></span>
                        <% } %>
                      </div>
                      
                      <!-- Variant Information -->
                      <% if (variantCount > 0) { %>
                        <div class="flex items-center gap-2">
                          <div class="flex items-center gap-1 px-2 py-1 bg-blue-50 text-blue-700 rounded-md text-xs font-medium">
                            <div class="w-1.5 h-1.5 bg-blue-500 rounded-full"></div>
                            <%= variantCount %> variant<%= variantCount > 1 ? 's' : '' %>
                          </div>
                          <% 
                            // Get price range from variants
                            let minPrice = product.price;
                            let maxPrice = product.price;
                            if (product.variants && product.variants.length > 0) {
                              const prices = product.variants.map(v => v.price || 0).filter(p => p > 0);
                              if (prices.length > 0) {
                                minPrice = Math.min(...prices);
                                maxPrice = Math.max(...prices);
                              }
                            }
                          %>
                          <% if (minPrice !== maxPrice) { %>
                            <span class="text-xs text-gray-500">
                              Rs <%= minPrice.toLocaleString() %> - Rs <%= maxPrice.toLocaleString() %>
                            </span>
                          <% } %>
                        </div>
                      <% } else { %>
                        <div class="text-xs text-gray-400">
                          Single variant
                        </div>
                      <% } %>
                    </div>
                  </td>
                  <td class="px-6 py-4">
                    <div class="flex flex-col gap-3">
                      <% const realTimeStock = product.variants ? product.variants.reduce((sum, v) => sum + (v.stock || 0), 0) : 0; %>
                      
                      <!-- Stock Number -->
                      <div class="flex items-center gap-2">
                        <span class="text-xl font-semibold text-gray-900"><%= realTimeStock %></span>
                        <div class="flex flex-col">
                          <span class="text-xs text-gray-500 leading-none">total</span>
                          <span class="text-xs text-gray-500 leading-none">units</span>
                        </div>
                      </div>
                      
                      <!-- Stock Status Badge -->
                      <% 
                        let stockClass = 'bg-green-50 text-green-700 border border-green-200';
                        let stockText = 'In Stock';
                        let stockDot = 'bg-green-500';
                        if (realTimeStock === 0) {
                          stockClass = 'bg-red-50 text-red-700 border border-red-200';
                          stockText = 'Out of Stock';
                          stockDot = 'bg-red-500';
                        } else if (realTimeStock <= 5) {
                          stockClass = 'bg-amber-50 text-amber-700 border border-amber-200';
                          stockText = 'Low Stock';
                          stockDot = 'bg-amber-500';
                        }
                      %>
                      <div class="flex items-center gap-2">
                        <span class="inline-flex items-center gap-2 px-3 py-1.5 text-sm font-medium rounded-lg <%= stockClass %> w-fit">
                          <div class="w-2 h-2 <%= stockDot %> rounded-full"></div>
                          <%= stockText %>
                        </span>
                      </div>
                      
                      <!-- Variant Stock Breakdown -->
                      <% if (product.variants && product.variants.length > 1) { %>
                        <% 
                          const goodStockVariants = product.variants.filter(v => (v.stock || 0) > 5).length;
                          const lowStockVariants = product.variants.filter(v => {
                            const stock = v.stock || 0;
                            return stock > 0 && stock <= 5;
                          }).length;
                          const outOfStockVariants = product.variants.filter(v => (v.stock || 0) === 0).length;
                        %>
                        <div class="flex items-center gap-1 text-xs">
                          <% if (goodStockVariants > 0) { %>
                            <span class="px-2 py-1 bg-green-100 text-green-700 rounded">
                              <%= goodStockVariants %> available
                            </span>
                          <% } %>
                          <% if (lowStockVariants > 0) { %>
                            <span class="px-2 py-1 bg-amber-100 text-amber-700 rounded">
                              <%= lowStockVariants %> low
                            </span>
                          <% } %>
                          <% if (outOfStockVariants > 0) { %>
                            <span class="px-2 py-1 bg-red-100 text-red-700 rounded">
                              <%= outOfStockVariants %> empty
                            </span>
                          <% } %>
                        </div>
                      <% } %>
                    </div>
                  </td>
                  <td class="px-6 py-4">
                    <div class="flex flex-col gap-2">
                      <% 
                        let statusClass = 'bg-gray-50 text-gray-700 border border-gray-200';
                        if (product.status === 'active') {
                          statusClass = 'bg-green-50 text-green-700 border border-green-200';
                        } else if (product.status === 'inactive') {
                          statusClass = 'bg-red-50 text-red-700 border border-red-200';
                        } else if (product.status === 'draft') {
                          statusClass = 'bg-yellow-50 text-yellow-700 border border-yellow-200';
                        }
                      %>
                      <span class="inline-flex px-3 py-1.5 text-sm font-medium rounded-lg <%= statusClass %> w-fit">
                        <%= product.status.charAt(0).toUpperCase() + product.status.slice(1) %>
                      </span>
                      <% if (product.featured) { %>
                        <span class="inline-flex px-3 py-1.5 text-sm font-medium rounded-lg bg-blue-50 text-blue-700 border border-blue-200 w-fit">
                          Featured
                        </span>
                      <% } %>
                    </div>
                  </td>
                  <td class="px-6 py-4">
                    <div class="flex items-center justify-center gap-1">
                      <a href="/admin/v1/products/<%= product._id %>" class="p-2 rounded-lg bg-blue-50 text-blue-700 hover:bg-blue-100 transition-colors border border-blue-200" title="View Product Details">
                        <i class="fa fa-eye text-xs"></i>
                      </a>
                      <a href="/admin/v1/products/<%= product._id %>/edit" class="p-2 rounded-lg bg-gray-50 text-gray-700 hover:bg-gray-100 transition-colors border border-gray-200" title="Edit Product">
                        <i class="fa fa-edit text-xs"></i>
                      </a>
                      <form action="/admin/v1/products/<%= product._id %>?_method=DELETE" method="POST" class="inline" onsubmit="return confirm('Delete <%= product.title %>?')">
                        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                        <button type="submit" class="p-2 rounded-lg bg-red-50 text-red-700 hover:bg-red-100 transition-colors border border-red-200" title="Delete Product">
                          <i class="fa fa-trash text-xs"></i>
                        </button>
                      </form>
                    </div>
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      <% } %>
    </div>

    <!-- Pagination -->
    <% if (pagination && pagination.total > 1) { %>
      <div class="flex flex-col sm:flex-row justify-between items-center mt-6 gap-4">
        <div class="text-sm text-gray-600">
          Page <%= pagination.current %> of <%= pagination.total %>
        </div>
        <nav class="flex gap-2">
          <% if (pagination.hasPrev) { %>
            <a href="?page=<%= pagination.prev %>" class="px-4 py-2 rounded-lg bg-white border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors">
              Previous
            </a>
          <% } %>
          <span class="px-4 py-2 rounded-lg bg-blue-600 text-white font-medium"><%= pagination.current %></span>
          <% if (pagination.hasNext) { %>
            <a href="?page=<%= pagination.next %>" class="px-4 py-2 rounded-lg bg-white border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors">
              Next
            </a>
          <% } %>
        </nav>
      </div>
    <% } %>
  </div>
</div>

<script>
// Enhanced Search Functionality
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('searchInput');
  const clearSearch = document.getElementById('clearSearch');
  const searchForm = document.getElementById('searchForm');
  let searchTimeout;
  
  // Show/hide clear button
  function toggleClearButton() {
    clearSearch.style.display = searchInput.value ? 'block' : 'none';
  }
  
  // Clear search
  clearSearch.addEventListener('click', function() {
    searchInput.value = '';
    toggleClearButton();
    searchInput.focus();
  });
  
  // Real-time search with debounce
  searchInput.addEventListener('input', function() {
    toggleClearButton();
    
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(() => {
      if (searchInput.value.length >= 2 || searchInput.value.length === 0) {
        searchForm.submit();
      }
    }, 500);
  });
  
  // Auto-submit on filter change
  const filterSelects = document.querySelectorAll('select[name="status"], select[name="category"], select[name="brand"], select[name="stock"]');
  filterSelects.forEach(select => {
    select.addEventListener('change', () => {
      searchForm.submit();
    });
  });
  

  
  // Initialize
  toggleClearButton();
  
  // Keyboard shortcuts
  document.addEventListener('keydown', function(e) {
    if (e.ctrlKey && e.key === 'f') {
      e.preventDefault();
      searchInput.focus();
    }
  });
});
</script>

<%- include('../partials/footer.ejs') %>