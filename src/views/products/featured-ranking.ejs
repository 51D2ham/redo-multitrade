<%- include('../partials/header.ejs', { title: 'Featured Products Ranking' }) %>

<!-- Navigation Breadcrumb -->
<nav class="flex items-center gap-2 text-sm text-gray-600 mb-4 px-4 sm:px-0">
  <a href="/admin/v1/staff/dashboard" class="hover:text-blue-600 transition-colors">Dashboard</a>
  <i class="fas fa-chevron-right text-xs text-gray-400"></i>
  <a href="/admin/v1/products" class="hover:text-blue-600 transition-colors">Products</a>
  <i class="fas fa-chevron-right text-xs text-gray-400"></i>
  <span class="text-gray-900 font-medium">Featured Ranking</span>
</nav>

<!-- Action Navigation -->
<div class="flex flex-col sm:flex-row gap-2 sm:gap-3 mb-6 px-4 sm:px-0">
  <a href="/admin/v1/staff/dashboard" class="flex items-center justify-center sm:justify-start gap-2 px-4 py-2 rounded-lg bg-blue-50 text-blue-700 hover:bg-blue-100 transition text-sm font-medium">
    <i class="fa fa-home"></i> <span>Dashboard</span>
  </a>
  <a href="/admin/v1/products" class="flex items-center justify-center sm:justify-start gap-2 px-4 py-2 rounded-lg bg-gray-50 text-gray-700 hover:bg-gray-100 transition text-sm font-medium">
    <i class="fa fa-box"></i> <span>Products</span>
  </a>
</div>

<main class="container mx-auto px-4">
  <div class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-100">
    <!-- Header -->
    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 p-4 sm:p-6 border-b border-gray-100">
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <div class="flex items-center gap-3 sm:gap-4">
          <div class="w-12 h-12 sm:w-16 sm:h-16 rounded-xl bg-blue-100 text-blue-700 flex items-center justify-center">
            <i class="fa fa-star text-lg sm:text-2xl"></i>
          </div>
          <div>
            <h1 class="text-xl sm:text-2xl font-bold text-gray-800">Featured Products Ranking</h1>
            <p class="text-gray-600 mt-1 text-sm sm:text-base">Drag and drop to reorder featured products</p>
          </div>
        </div>
        <div class="text-center sm:text-right">
          <div class="text-xl sm:text-2xl font-bold text-blue-600"><%= products.length %></div>
          <div class="text-xs sm:text-sm text-gray-500">Featured Products</div>
        </div>
      </div>
    </div>

    <div class="p-4 sm:p-6">
      <!-- Flash Messages -->
      <% if (error && error.length) { %>
        <div class="mb-4 p-3 rounded-lg border-l-4 border-red-400 bg-red-50 text-red-700">
          <% error.forEach(msg => { %>
            <div class="flex items-center gap-2 text-sm">
              <i class="fa fa-exclamation-circle"></i>
              <%= msg %>
            </div>
          <% }) %>
        </div>
      <% } %>
      <% if (success && success.length) { %>
        <div class="mb-4 p-3 rounded-lg border-l-4 border-green-400 bg-green-50 text-green-700">
          <% success.forEach(msg => { %>
            <div class="flex items-center gap-2 text-sm">
              <i class="fa fa-check-circle"></i>
              <%= msg %>
            </div>
          <% }) %>
        </div>
      <% } %>

      <% if (products.length === 0) { %>
        <div class="text-center py-8 sm:py-12">
          <div class="w-20 h-20 sm:w-24 sm:h-24 mx-auto mb-4 rounded-full bg-gray-100 flex items-center justify-center">
            <i class="fa fa-star text-2xl sm:text-3xl text-gray-400"></i>
          </div>
          <h3 class="text-lg sm:text-xl font-semibold text-gray-700 mb-2">No Featured Products</h3>
          <p class="text-gray-500 mb-4 text-sm sm:text-base px-4">Mark products as featured to manage their ranking here.</p>
          <a href="/admin/v1/products" class="inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition text-sm font-medium">
            <i class="fa fa-plus"></i> Manage Products
          </a>
        </div>
      <% } else { %>
        <form id="rankingForm" action="/admin/v1/products/featured/update-ranking" method="POST">
      <input type="hidden" name="_csrf" value="<%= csrfToken %>">
          
          <div class="mb-4 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3">
            <div class="text-xs sm:text-sm text-gray-600 flex items-center gap-2">
              <i class="fa fa-info-circle text-blue-500"></i>
              <span>Drag products to reorder. Higher positions appear first on the website.</span>
            </div>
            <button type="submit" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition flex items-center justify-center gap-2 text-sm font-medium">
              <i class="fa fa-save"></i> <span>Save Ranking</span>
            </button>
          </div>

          <div id="sortableList" class="space-y-3">
            <% products.forEach((product, index) => { %>
              <div class="ranking-item bg-gradient-to-r from-white to-gray-50 rounded-xl p-3 sm:p-4 border border-gray-200 cursor-move hover:shadow-lg hover:border-blue-300 transition-all duration-300" data-id="<%= product._id %>">
                <div class="flex items-center gap-3 sm:gap-4">
                  <div class="flex items-center gap-2 sm:gap-3">
                    <div class="w-7 h-7 sm:w-8 sm:h-8 rounded-full bg-gradient-to-br from-blue-500 to-blue-600 text-white flex items-center justify-center font-bold text-xs sm:text-sm shadow-md">
                      <span class="rank-number"><%= index + 1 %></span>
                    </div>
                    <i class="fa fa-grip-vertical text-gray-400 cursor-grab active:cursor-grabbing"></i>
                  </div>
                  
                  <div class="flex-shrink-0">
                    <% if (product.images && product.images.length > 0) { %>
                      <img src="/uploads/products/<%= product.images[0] %>" alt="<%= product.title %>" class="w-12 h-12 sm:w-16 sm:h-16 object-cover rounded-lg">
                    <% } else { %>
                      <div class="w-12 h-12 sm:w-16 sm:h-16 bg-gray-200 rounded-lg flex items-center justify-center">
                        <i class="fa fa-image text-gray-400 text-sm"></i>
                      </div>
                    <% } %>
                  </div>
                  
                  <div class="flex-1 min-w-0">
                    <h3 class="font-semibold text-gray-800 truncate text-sm sm:text-base"><%= product.title %></h3>
                    <div class="flex flex-col sm:flex-row sm:items-center gap-1 sm:gap-4 mt-1 text-xs sm:text-sm text-gray-600">
                      <span class="flex items-center gap-1">
                        <i class="fa fa-tag"></i>
                        <span class="truncate"><%= product.category?.name || 'No Category' %></span>
                      </span>
                      <span class="flex items-center gap-1">
                        <i class="fa fa-building"></i>
                        <span class="truncate"><%= product.brand?.name || 'No Brand' %></span>
                      </span>
                      <span class="flex items-center gap-1">
                        <i class="fa fa-boxes"></i>
                        <span><%= product.totalStock %> in stock</span>
                      </span>
                    </div>
                  </div>
                  
                  <div class="flex flex-col sm:flex-row items-end sm:items-center gap-2">
                    <span class="px-3 py-1 text-xs font-medium rounded-full <%= product.status === 'active' ? 'bg-gradient-to-r from-green-100 to-green-200 text-green-800 border border-green-300' : 'bg-gradient-to-r from-gray-100 to-gray-200 text-gray-700 border border-gray-300' %>">
                      <%= product.status %>
                    </span>
                    <a href="/admin/v1/products/<%= product._id %>" class="p-1 sm:p-2 text-gray-400 hover:text-blue-600 transition">
                      <i class="fa fa-external-link-alt text-sm"></i>
                    </a>
                  </div>
                </div>
              </div>
            <% }) %>
          </div>
        </form>
      <% } %>
    </div>
  </div>
</main>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sortableList = document.getElementById('sortableList');
  
  if (sortableList) {
    let draggedElement = null;
    let draggedIndex = -1;
    let isDragging = false;
    
    function initializeDragAndDrop() {
      const items = sortableList.querySelectorAll('.ranking-item');
      items.forEach((item, index) => {
        item.draggable = true;
        item.dataset.originalIndex = index;
        
        // Mouse events
        item.addEventListener('dragstart', handleDragStart);
        item.addEventListener('dragend', handleDragEnd);
        item.addEventListener('dragover', handleDragOver);
        item.addEventListener('drop', handleDrop);
        
        // Touch events for mobile
        item.addEventListener('touchstart', handleTouchStart, { passive: false });
        item.addEventListener('touchmove', handleTouchMove, { passive: false });
        item.addEventListener('touchend', handleTouchEnd, { passive: false });
      });
    }
    
    function handleDragStart(e) {
      draggedElement = this;
      draggedIndex = Array.from(sortableList.children).indexOf(this);
      isDragging = true;
      
      this.classList.add('dragging');
      this.style.opacity = '0.5';
      
      e.dataTransfer.effectAllowed = 'move';
      e.dataTransfer.setData('text/html', '');
      
      // Add visual feedback to other items
      const items = sortableList.querySelectorAll('.ranking-item');
      items.forEach(item => {
        if (item !== this) {
          item.classList.add('drop-zone');
        }
      });
    }
    
    function handleDragEnd(e) {
      if (!isDragging) return;
      
      this.classList.remove('dragging');
      this.style.opacity = '';
      isDragging = false;
      
      // Remove visual feedback
      const items = sortableList.querySelectorAll('.ranking-item');
      items.forEach(item => {
        item.classList.remove('drop-zone', 'drag-over');
      });
      
      updateRankNumbers();
      showSaveNotification();
      
      draggedElement = null;
      draggedIndex = -1;
    }
    
    function handleDragOver(e) {
      e.preventDefault();
      e.dataTransfer.dropEffect = 'move';
      
      if (this !== draggedElement && isDragging) {
        this.classList.add('drag-over');
      }
    }
    
    function handleDrop(e) {
      e.preventDefault();
      
      if (this === draggedElement || !isDragging) return;
      
      const dropIndex = Array.from(sortableList.children).indexOf(this);
      const rect = this.getBoundingClientRect();
      const midpoint = rect.top + rect.height / 2;
      
      if (e.clientY < midpoint) {
        sortableList.insertBefore(draggedElement, this);
      } else {
        sortableList.insertBefore(draggedElement, this.nextSibling);
      }
      
      this.classList.remove('drag-over');
    }
    
    // Touch events for mobile support
    let touchStartY = 0;
    let touchElement = null;
    
    function handleTouchStart(e) {
      touchStartY = e.touches[0].clientY;
      touchElement = this;
      this.classList.add('touch-dragging');
    }
    
    function handleTouchMove(e) {
      e.preventDefault();
      
      if (!touchElement) return;
      
      const touch = e.touches[0];
      const elementBelow = document.elementFromPoint(touch.clientX, touch.clientY);
      const rankingItem = elementBelow?.closest('.ranking-item');
      
      if (rankingItem && rankingItem !== touchElement) {
        const rect = rankingItem.getBoundingClientRect();
        const midpoint = rect.top + rect.height / 2;
        
        if (touch.clientY < midpoint) {
          sortableList.insertBefore(touchElement, rankingItem);
        } else {
          sortableList.insertBefore(touchElement, rankingItem.nextSibling);
        }
      }
    }
    
    function handleTouchEnd(e) {
      if (touchElement) {
        touchElement.classList.remove('touch-dragging');
        updateRankNumbers();
        showSaveNotification();
        touchElement = null;
      }
    }
    
    function updateRankNumbers() {
      const items = sortableList.querySelectorAll('.ranking-item');
      items.forEach((item, index) => {
        const rankNumber = item.querySelector('.rank-number');
        if (rankNumber) {
          rankNumber.textContent = index + 1;
        }
      });
    }
    
    function showSaveNotification() {
      const saveButton = document.querySelector('button[type="submit"]');
      if (saveButton) {
        saveButton.classList.add('animate-pulse');
        saveButton.style.backgroundColor = '#059669';
        setTimeout(() => {
          saveButton.classList.remove('animate-pulse');
          saveButton.style.backgroundColor = '';
        }, 1500);
      }
    }
    
    // Initialize drag and drop
    initializeDragAndDrop();
    
    // Form submission
    const form = document.getElementById('rankingForm');
    if (form) {
      form.addEventListener('submit', function(e) {
        const items = sortableList.querySelectorAll('.ranking-item');
        const rankings = Array.from(items).map(item => ({
          id: item.dataset.id
        }));
        
        // Remove existing hidden input if any
        const existingInput = this.querySelector('input[name="rankings"]');
        if (existingInput) {
          existingInput.remove();
        }
        
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'rankings';
        hiddenInput.value = JSON.stringify(rankings);
        this.appendChild(hiddenInput);
      });
    }
  }
});
</script>

<style>
.ranking-item {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
}

.ranking-item:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
}

.ranking-item.dragging {
  opacity: 0.8;
  transform: rotate(2deg) scale(1.03);
  box-shadow: 0 12px 25px rgba(0, 0, 0, 0.2);
  z-index: 1000;
  border-color: #3b82f6;
}

.ranking-item.drop-zone {
  border-color: #93c5fd;
  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
}

.ranking-item.drag-over {
  border-color: #2563eb;
  background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
  transform: scale(1.02);
}

.ranking-item.touch-dragging {
  opacity: 0.9;
  transform: scale(1.05);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.25);
  z-index: 1000;
}

.cursor-grab {
  cursor: grab;
}

.cursor-grabbing {
  cursor: grabbing;
}

.ranking-item img {
  transition: transform 0.2s ease;
}

.ranking-item:hover img {
  transform: scale(1.05);
}

/* Drag handle enhancement */
.fa-grip-vertical {
  transition: all 0.2s ease;
}

.ranking-item:hover .fa-grip-vertical {
  color: #3b82f6;
  transform: scale(1.2);
}

.ranking-item.dragging .fa-grip-vertical {
  color: #1d4ed8;
}

/* Mobile optimizations */
@media (max-width: 640px) {
  .ranking-item {
    touch-action: manipulation;
    user-select: none;
  }
  
  .ranking-item:hover {
    transform: translateY(-1px);
  }
  
  .ranking-item.touch-dragging {
    transform: scale(1.02);
  }
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: #f8fafc;
  border-radius: 3px;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(to bottom, #64748b, #475569);
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(to bottom, #475569, #334155);
}

/* Animation for rank number updates */
.rank-number {
  transition: all 0.2s ease;
}

.ranking-item.dragging .rank-number {
  animation: bounce 0.6s ease-in-out;
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-3px);
  }
  60% {
    transform: translateY(-2px);
  }
}
</style>

<%- include('../partials/footer.ejs') %>