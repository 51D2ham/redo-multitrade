<%- include('../partials/header.ejs', { title: 'Edit Type' }) %>
<!-- Modern Navigation Bar -->
<nav class="flex flex-wrap gap-3 mb-8 p-4 bg-white rounded-xl shadow-sm border border-gray-100 items-center">
  <a href="/admin/v1/staff/dashboard" class="flex items-center gap-2 px-4 py-2 rounded-lg bg-blue-50 text-blue-700 hover:bg-blue-100 transition">
    <i class="fa fa-home"></i> Dashboard
  </a>
  <a href="/admin/v1/parameters" class="flex items-center gap-2 px-4 py-2 rounded-lg bg-gray-50 text-gray-700 hover:bg-gray-100 transition">
    <i class="fa fa-cog"></i> System Parameters
  </a>
  <a href="/admin/v1/parameters/types" class="flex items-center gap-2 px-4 py-2 rounded-lg bg-gray-50 text-gray-700 hover:bg-gray-100 transition">
    <i class="fa fa-list"></i> Type List
  </a>
  <a href="/admin/v1/parameters/types/new" class="flex items-center gap-2 px-4 py-2 rounded-lg bg-green-50 text-green-700 hover:bg-green-100 transition">
    <i class="fa fa-plus"></i> Add Type
  </a>
  <% if (typeof type !== 'undefined' && type && type._id) { %>
    <a href="/admin/v1/parameters/types/<%= type._id %>" class="px-4 py-2 rounded-lg bg-yellow-100 text-yellow-700 hover:bg-yellow-200 transition flex items-center gap-2">
      <i class="fa fa-eye"></i> Show Type
    </a>
  <% } %>
</nav>
<main class="container mx-auto max-w-2xl px-4 mt-8">
  <div class="flex flex-col md:flex-row md:justify-between md:items-center mb-8 gap-4">
    <h1 class="text-3xl font-bold text-gray-800">Edit Type</h1>
  </div>
  <% 
    const successMsgs = Array.isArray(success) ? success : (success ? [success] : []);
    const errorMsgs = Array.isArray(error) ? error : (error ? [error] : []);
  %>

  <!-- Flash Messages -->
  <% if (successMsgs.length) { %>
    <div class="mb-6 p-4 rounded-lg border-l-4 border-green-400 bg-green-50 text-green-800 shadow-sm">
      <% successMsgs.forEach(function(msg){ %>
        <div class="flex items-center gap-2">
          <i class="fa fa-check-circle"></i>
          <span><%= msg %></span>
        </div>
      <% }) %>
    </div>
  <% } %>

  <% if (errorMsgs.length) { %>
    <div class="mb-6 p-4 rounded-lg border-l-4 border-red-400 bg-red-50 text-red-800 shadow-sm">
      <% errorMsgs.forEach(function(msg){ %>
        <div class="flex items-center gap-2">
          <i class="fa fa-exclamation-circle"></i>
          <span><%= msg %></span>
        </div>
      <% }) %>
    </div>
  <% } %>

  <div class="bg-white rounded-xl shadow-md p-8 mb-10 border border-gray-100">
    <% if (typeof type !== 'undefined' && type) { %>
      <form action="/admin/v1/parameters/types/<%= type._id %>" method="POST" class="space-y-6">
        <input type="hidden" name="_method" value="PUT">
        <div>
          <label for="name" class="block font-semibold mb-1 text-gray-700">Name *</label>
          <input 
            id="name" 
            name="name" 
            type="text"
            value="<%= type.name %>"
            class="w-full p-3 rounded-lg border border-gray-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-100 transition"
            required
          >
        </div>
        <div>
          <label for="category" class="block font-semibold mb-1 text-gray-700">Category *</label>
          <select
            id="category"
            name="category"
            class="w-full p-3 rounded-lg border border-gray-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-100 transition"
            required
          >
            <option value="">Select Category...</option>
            <% if (typeof categories !== 'undefined' && categories) { %>
              <% categories.forEach(category => { %>
                <option value="<%= category._id %>" <%= type.category && type.category._id.toString() === category._id.toString() ? 'selected' : '' %>>
                  <%= category.name %>
                </option>
              <% }) %>
            <% } %>
          </select>
        </div>
        <div>
          <label for="subCategory" class="block font-semibold mb-1 text-gray-700">SubCategory *</label>
          <select
            id="subCategory"
            name="subCategory"
            class="w-full p-3 rounded-lg border border-gray-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-100 transition"
            required
          >
            <option value="">Select SubCategory...</option>
            <% if (type.subCategory) { %>
              <option value="<%= type.subCategory._id %>" selected><%= type.subCategory.name %></option>
            <% } %>
          </select>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="flex items-center gap-3">
            <input
              id="isActive"
              name="isActive"
              type="checkbox"
              <%= type.isActive ? 'checked' : '' %>
              class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"
            >
            <label for="isActive" class="font-semibold text-gray-700">Active</label>
          </div>

          <div class="flex items-center gap-3">
            <input
              id="isFeatured"
              name="isFeatured"
              type="checkbox"
              <%= type.isFeatured ? 'checked' : '' %>
              class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"
            >
            <label for="isFeatured" class="font-semibold text-gray-700">Featured</label>
          </div>
        </div>
        <div class="flex justify-end gap-3">
          <a href="/admin/v1/parameters/types" class="px-4 py-2 rounded-lg bg-gray-100 text-gray-700 hover:bg-blue-100 transition">Cancel</a>
          <button type="submit" class="px-4 py-2 rounded-lg bg-blue-600 text-white font-semibold hover:bg-blue-700 transition">
            <i class="fa fa-save mr-2"></i>Save Changes
          </button>
        </div>
      </form>
    <% } else { %>
      <div class="text-center py-8">
        <p class="text-gray-500">Type not found</p>
        <a href="/admin/v1/parameters/types" class="mt-4 inline-block px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition">
          Back to Types List
        </a>
      </div>
    <% } %>
     <div class="flex justify-right mt-8">
        <a href="/admin/v1/parameters/types" class="px-4 py-2 rounded-lg bg-gray-100 text-gray-700 hover:bg-blue-100 transition flex items-center gap-2">
          <span class="mr-1">←</span> Back to Types List
        </a>
      </div>
  </div>

  <script nonce="<%= cspNonce %>">
    document.addEventListener('DOMContentLoaded', function() {
      const categorySelect = document.getElementById('category');
      const subCategorySelect = document.getElementById('subCategory');
      const selectedSubCategoryId = '<%= type && type.subCategory ? type.subCategory._id : "" %>';
      
      function loadSubCategories(categoryId, preselectedId = '') {
        subCategorySelect.innerHTML = '<option value="">Loading...</option>';
        subCategorySelect.disabled = true;
        
        if (!categoryId) {
          subCategorySelect.innerHTML = '<option value="">Select SubCategory...</option>';
          subCategorySelect.disabled = false;
          return;
        }
        
        fetch(`/admin/v1/parameters/types/subcategories/${categoryId}`)
          .then(response => response.json())
          .then(subcategories => {
            subCategorySelect.innerHTML = '<option value="">Select SubCategory...</option>';
            subcategories.forEach(sub => {
              const option = document.createElement('option');
              option.value = sub._id;
              option.textContent = sub.name;
              if (preselectedId && sub._id === preselectedId) {
                option.selected = true;
              }
              subCategorySelect.appendChild(option);
            });
            subCategorySelect.disabled = false;
          })
          .catch(error => {
            console.error('Error loading subcategories:', error);
            subCategorySelect.innerHTML = '<option value="">Error loading subcategories</option>';
            subCategorySelect.disabled = false;
          });
      }
      
      // Load subcategories on page load if category is selected
      if (categorySelect.value) {
        loadSubCategories(categorySelect.value, selectedSubCategoryId);
      }
      
      // Add change event listener
      categorySelect.addEventListener('change', function() {
        loadSubCategories(this.value);
      });
    });
  </script>
</main>
<%- include('../partials/footer.ejs') %>

